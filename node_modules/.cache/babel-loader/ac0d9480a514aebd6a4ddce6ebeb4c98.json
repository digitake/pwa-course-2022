{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kao\\\\Desktop\\\\GI472(\\u0E2A.)\\\\Visual Studio Code\\\\pwa-course-2022\\\\pwa-course-2022\\\\src\\\\context\\\\FirebaseChatContextProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport { firebase } from './FirebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst hashCode = s => s.split('').reduce((a, b) => (a << 5) - a + b.charCodeAt(0) | 0, 0);\n\nconst ChatStateContext = /*#__PURE__*/createContext({\n  userList: [],\n  chatroomList: []\n});\nexport default function ChatStateProvider(_ref) {\n  _s();\n\n  let {\n    children,\n    self\n  } = _ref;\n  const usersRef = firebase.database().ref('users');\n  const chatroomsRef = firebase.database().ref('chatrooms');\n  const [userList, setUserList] = useState([]);\n  const [chatroomList, setChatroomList] = useState([]);\n\n  const chat = msg => ({\n    msg: msg,\n    user: self.uid,\n    timestamp: firebase.database.ServerValue.TIMESTAMP\n  });\n\n  useEffect(() => {\n    const unregisterChatObserver = usersRef.on('child_added', snapshot => {\n      const excludeSelf = x => x.key !== self.uid;\n\n      setUserList(oldList => [...oldList.filter(excludeSelf), { ...snapshot.val(),\n        key: snapshot.key\n      }]);\n    });\n    const unregisterChatObserverChildRemoved = usersRef.on('child_removed', snapshot => {\n      const userId = snapshot.key;\n\n      const excludeSelf = x => x.key !== userId;\n\n      setUserList(oldList => oldList.filter(excludeSelf));\n    });\n    console.log(\"self checkin to firebase\", self);\n    const x = usersRef.child(self.uid);\n    x.set({\n      displayName: self.displayName\n    });\n    x.onDisconnect().remove();\n    return () => {\n      unregisterChatObserver();\n      unregisterChatObserverChildRemoved();\n    }; // eslint-disable-next-line\n  }, []);\n\n  const getUserProfile = uid => {\n    return usersRef.child(uid).once('value').then(snapshot => {\n      return snapshot.val();\n    });\n  };\n\n  const getPrivateChat = friendId => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    return chatroomsRef.child(`${chatroomId}`).once('value').then(snapshot => {\n      return snapshot.val();\n    });\n  };\n\n  const listenToPrivateChat = (friendId, callback) => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    return chatroomsRef.child(`${chatroomId}/chat`).on('child_added', snapshot => {\n      // {roomTitle, users, chat}\n      snapshot && callback(snapshot.val());\n    });\n  };\n\n  const sendPrivateMsg = (msg, friendId) => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    const chatroomRef = chatroomsRef.child(`${chatroomId}/chat`);\n    chatroomRef.push(chat(msg));\n  };\n\n  const getChatroom = roomId => {\n    return chatroomsRef.child(`${roomId}`).once('value').then(snapshot => {\n      // {roomTitle, users, chat}\n      return snapshot.val();\n    });\n  };\n\n  const listenToChatroom = (roomId, callback) => {\n    return chatroomsRef.child(`${roomId}/chat`).on('child_added', snapshot => {\n      // {roomTitle, users, chat}\n      snapshot && callback(snapshot.val());\n    });\n  };\n\n  const sendMsg = (msg, targetId) => {\n    const chatroomRef = chatroomsRef.child(`${targetId}/chat`);\n    chatroomRef.push(chat(msg));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatStateContext.Provider, {\n    value: {\n      userList: userList,\n      chatroomList: chatroomList,\n      getUserProfile: getUserProfile,\n      getPrivateChat: getPrivateChat,\n      listenToPrivateChat: listenToPrivateChat,\n      sendPrivateMsg: sendPrivateMsg,\n      getChatroom: getChatroom,\n      listenToChatroom: listenToChatroom,\n      sendMsg: sendMsg\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatStateProvider, \"/jWoRxoGylbxvAo5cbbysId2aOs=\");\n\n_c = ChatStateProvider;\nexport const useChatStateContext = () => {\n  _s2();\n\n  return useContext(ChatStateContext);\n};\n\n_s2(useChatStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatStateProvider\");","map":{"version":3,"sources":["C:/Users/Kao/Desktop/GI472(à¸ª.)/Visual Studio Code/pwa-course-2022/pwa-course-2022/src/context/FirebaseChatContextProvider.js"],"names":["React","createContext","useContext","useState","useEffect","firebase","hashCode","s","split","reduce","a","b","charCodeAt","ChatStateContext","userList","chatroomList","ChatStateProvider","children","self","usersRef","database","ref","chatroomsRef","setUserList","setChatroomList","chat","msg","user","uid","timestamp","ServerValue","TIMESTAMP","unregisterChatObserver","on","snapshot","excludeSelf","x","key","oldList","filter","val","unregisterChatObserverChildRemoved","userId","console","log","child","set","displayName","onDisconnect","remove","getUserProfile","once","then","getPrivateChat","friendId","chatroomId","listenToPrivateChat","callback","sendPrivateMsg","chatroomRef","push","getChatroom","roomId","listenToChatroom","sendMsg","targetId","useChatStateContext"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport {firebase} from './FirebaseConfig';\n\nconst hashCode = s => s.split('').reduce((a,b) => (((a << 5) - a) + b.charCodeAt(0))|0, 0)\n\nconst ChatStateContext = createContext({\n  userList: [],\n  chatroomList: []\n});\n\nexport default function ChatStateProvider({ children, self }) {\n  const usersRef = firebase.database().ref('users');\n  const chatroomsRef = firebase.database().ref('chatrooms');\n\n  const [userList, setUserList] = useState([]);\n  const [chatroomList, setChatroomList] = useState([]);\n\n  const chat = msg => ({ msg: msg, user: self.uid, timestamp: firebase.database.ServerValue.TIMESTAMP });\n  \n\n  useEffect(() => {\n    const unregisterChatObserver = usersRef.on('child_added', snapshot => {\n      \n      const excludeSelf = x=> x.key !== self.uid;\n      setUserList(oldList => [...oldList.filter(excludeSelf), {\n        ...snapshot.val(),\n        key: snapshot.key\n      }]\n      );\n    });\n\n    const unregisterChatObserverChildRemoved = usersRef.on('child_removed', snapshot => {\n\n      const userId = snapshot.key;\n      \n      const excludeSelf = x=> x.key !== userId;\n      setUserList(oldList => oldList.filter(excludeSelf));\n    });\n\n    console.log(\"self checkin to firebase\", self);\n    const x = usersRef.child(self.uid)\n    x.set({\n      displayName: self.displayName,\n    })\n    x.onDisconnect().remove();\n\n    return () => {\n      unregisterChatObserver();\n      unregisterChatObserverChildRemoved();\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const getUserProfile = uid => {\n    return usersRef.child(uid).once('value').then(snapshot => {\n      return snapshot.val();\n    });\n  };\n\n  const getPrivateChat = (friendId) => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    return chatroomsRef.child(`${chatroomId}`).once('value').then(snapshot => {\n      return snapshot.val();\n    });\n  };\n\n  const listenToPrivateChat = (friendId, callback) => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    return chatroomsRef.child(`${chatroomId}/chat`).on('child_added', snapshot => {\n      // {roomTitle, users, chat}\n      snapshot && callback(snapshot.val());\n    });\n  };\n\n  const sendPrivateMsg = (msg, friendId) => {\n    const chatroomId = `1-1-${hashCode(self.uid) + hashCode(friendId)}`;\n    const chatroomRef = chatroomsRef.child(`${chatroomId}/chat`);\n    chatroomRef.push(chat(msg));\n  };\n\n  const getChatroom = (roomId) => {\n    return chatroomsRef.child(`${roomId}`).once('value').then(snapshot => {\n      // {roomTitle, users, chat}\n      return snapshot.val();\n    });\n  };\n\n  const listenToChatroom = (roomId, callback) => {\n    return chatroomsRef.child(`${roomId}/chat`).on('child_added', snapshot => {\n      // {roomTitle, users, chat}\n      snapshot && callback(snapshot.val());\n    });\n  };\n\n  const sendMsg = (msg, targetId) => {\n    const chatroomRef = chatroomsRef.child(`${targetId}/chat`);\n    chatroomRef.push(chat(msg));\n  };\n  \n\n  return (\n    <ChatStateContext.Provider\n      value={{\n        userList: userList,\n        chatroomList: chatroomList,\n        getUserProfile: getUserProfile,\n        getPrivateChat: getPrivateChat,\n        listenToPrivateChat: listenToPrivateChat,\n        sendPrivateMsg: sendPrivateMsg,\n        getChatroom: getChatroom,\n        listenToChatroom: listenToChatroom,\n        sendMsg: sendMsg\n      }}\n    >\n      {children}\n    </ChatStateContext.Provider>\n  );\n}\n\nexport const useChatStateContext = () => useContext(ChatStateContext);"]},"metadata":{},"sourceType":"module"}