{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kao\\\\Desktop\\\\GI472(\\u0E2A.)\\\\Visual Studio Code\\\\pwa-course-2022\\\\pwa-course-2022\\\\src\\\\PrivateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport App from './components/App.js';\nimport Chatbox from './components/Chatbox.js';\nimport Inputbox from './components/Inputbox.js';\nimport Titlebar from './components/Titlebar.js';\nimport './Chat.css';\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateChat() {\n  _s();\n\n  const {\n    uid\n  } = useParams();\n  const {\n    getUserProfile,\n    sendPrivateMsg,\n    listenToPrivateChat\n  } = useChatStateContext();\n  const [friendName, setFriendName] = useState(\"\");\n  const [chatData, setChatData] = useState([]);\n\n  const onMsg = msg => {\n    const mappedValue = { ...msg,\n      key: msg.timestamp || Date.now(),\n      displayName: friendName,\n      position: msg.user === uid ? \"right\" : \"left\"\n    };\n    setChatData(oldChat => [mappedValue, ...oldChat]);\n  };\n\n  useEffect(() => {\n    getUserProfile(uid).then(friend => {\n      friend && setFriendName(friend.displayName);\n      return friend;\n    });\n    const unsubscribePrivateChat = listenToPrivateChat(uid, onMsg);\n    return () => {\n      unsubscribePrivateChat();\n    };\n  }, [uid]);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(App, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(Titlebar, {\n        value: friendName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chatbox, {\n        data: chatData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        onEnter: x => sendPrivateMsg(x, uid)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrivateChat, \"JRK7Ti0PNUFTnJHscR6o+jdvy+M=\", false, function () {\n  return [useParams, useChatStateContext];\n});\n\n_c = PrivateChat;\nexport default PrivateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateChat\");","map":{"version":3,"sources":["C:/Users/Kao/Desktop/GI472(à¸ª.)/Visual Studio Code/pwa-course-2022/pwa-course-2022/src/PrivateChat.js"],"names":["useEffect","useState","App","Chatbox","Inputbox","Titlebar","useChatStateContext","useParams","PrivateChat","uid","getUserProfile","sendPrivateMsg","listenToPrivateChat","friendName","setFriendName","chatData","setChatData","onMsg","msg","mappedValue","key","timestamp","Date","now","displayName","position","user","oldChat","then","friend","unsubscribePrivateChat","window","scrollTo","x"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,YAAP;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAUF,SAAS,EAAzB;AACA,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,cAAlB;AAAkCC,IAAAA;AAAlC,MAA0DN,mBAAmB,EAAnF;AACA,QAAM,CAAEO,UAAF,EAAcC,aAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEc,QAAF,EAAYC,WAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMgB,KAAK,GAAIC,GAAD,IAAS;AAErB,UAAMC,WAAW,GAAG,EAClB,GAAGD,GADe;AAElBE,MAAAA,GAAG,EAAEF,GAAG,CAACG,SAAJ,IAAiBC,IAAI,CAACC,GAAL,EAFJ;AAGlBC,MAAAA,WAAW,EAAEX,UAHK;AAIlBY,MAAAA,QAAQ,EAAEP,GAAG,CAACQ,IAAJ,KAAajB,GAAb,GAAmB,OAAnB,GAA6B;AAJrB,KAApB;AAOAO,IAAAA,WAAW,CAACW,OAAO,IAAI,CAACR,WAAD,EAAc,GAAGQ,OAAjB,CAAZ,CAAX;AACD,GAVD;;AAYA3B,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,CAACD,GAAD,CAAd,CACCmB,IADD,CACMC,MAAM,IAAI;AACdA,MAAAA,MAAM,IAAIf,aAAa,CAACe,MAAM,CAACL,WAAR,CAAvB;AACA,aAAOK,MAAP;AACD,KAJD;AAMA,UAAMC,sBAAsB,GAAGlB,mBAAmB,CAACH,GAAD,EAAMQ,KAAN,CAAlD;AAEA,WAAO,MAAM;AAACa,MAAAA,sBAAsB;AAAG,KAAvC;AACD,GAVQ,EAUN,CAACrB,GAAD,CAVM,CAAT;AAYAT,EAAAA,SAAS,CAAC,MAAM;AACd+B,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,GAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEnB;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEkB,CAAC,IAAEtB,cAAc,CAACsB,CAAD,EAAGxB,GAAH;AAApC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA3CQD,W;UACSD,S,EACgDD,mB;;;KAFzDE,W;AA6CT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport App from './components/App.js';\r\nimport Chatbox from './components/Chatbox.js';\r\nimport Inputbox from './components/Inputbox.js';\r\nimport Titlebar from './components/Titlebar.js';\r\nimport './Chat.css';\r\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction PrivateChat() {\r\n  const { uid } = useParams();\r\n  const { getUserProfile, sendPrivateMsg, listenToPrivateChat } = useChatStateContext();\r\n  const [ friendName, setFriendName ] = useState(\"\");\r\n  const [ chatData, setChatData ] = useState([]);\r\n\r\n  const onMsg = (msg) => {\r\n    \r\n    const mappedValue = {\r\n      ...msg,\r\n      key: msg.timestamp || Date.now(),\r\n      displayName: friendName,\r\n      position: msg.user === uid ? \"right\" : \"left\"\r\n    };\r\n    \r\n    setChatData(oldChat => [mappedValue, ...oldChat]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserProfile(uid)\r\n    .then(friend => {\r\n      friend && setFriendName(friend.displayName);\r\n      return friend;\r\n    })\r\n\r\n    const unsubscribePrivateChat = listenToPrivateChat(uid, onMsg);\r\n\r\n    return () => {unsubscribePrivateChat()}\r\n  }, [uid]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  return (\r\n    <App>\r\n      <div className=\"chat\">\r\n        <Titlebar value={friendName}/>\r\n        <Chatbox data={chatData}/>\r\n        <Inputbox onEnter={x=>sendPrivateMsg(x,uid)}/>\r\n      </div>\r\n    </App>\r\n  );\r\n}\r\n\r\nexport default PrivateChat;\r\n"]},"metadata":{},"sourceType":"module"}