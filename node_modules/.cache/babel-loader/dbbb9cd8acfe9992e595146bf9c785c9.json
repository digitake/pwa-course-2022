{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kao\\\\Desktop\\\\GI472(\\u0E2A.)\\\\Visual Studio Code\\\\pwa-course-2022\\\\pwa-course-2022\\\\src\\\\components\\\\Chatline.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chatline(props) {\n  _s();\n\n  let text = props.text;\n  const [element, setElement] = useState(text);\n\n  function transform(text) {\n    if (text.startsWith(\"/link\")) {\n      setElement( /*#__PURE__*/_jsxDEV(Link, {\n        to: text,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 18\n      }, this));\n    } else if (text.startsWith(\"/embed\")) {\n      setElement(text);\n    } else if (text.startsWith(\"/age\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.agify.io/?name=\" + name).then(res => res.json()).then(data => setElement(data.age));\n    } else if (text.startsWith(\"/gender\")) {\n      const [, name] = text.split(\" \");\n      fetch(\"https://api.genderize.io/?name=\" + name).then(res => res.json()).then(data => setElement(data.gender));\n    } else if (text.startsWith(\"/randomfact\")) {// ex10-01 here: Implement randomfact using fetch & promise\n      // https://uselessfacts.jsph.pl/random.json?language=en\n    } else if (text.startsWith(\"nationalize\")) {}\n  }\n\n  ;\n  useEffect(() => {\n    transform(text);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: element\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chatline, \"HnevMUOP2H+z1tvJY9NlXFepzUA=\");\n\n_c = Chatline;\nexport default Chatline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatline\");","map":{"version":3,"sources":["C:/Users/Kao/Desktop/GI472(à¸ª.)/Visual Studio Code/pwa-course-2022/pwa-course-2022/src/components/Chatline.js"],"names":["useState","useEffect","Link","Chatline","props","text","element","setElement","transform","startsWith","name","split","fetch","then","res","json","data","age","gender","__html"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACK,IAAD,CAAtC;;AAEA,WAASG,SAAT,CAAmBH,IAAnB,EAAyB;AACvB,QAAIA,IAAI,CAACI,UAAL,CAAgB,OAAhB,CAAJ,EAA8B;AAC5BF,MAAAA,UAAU,eAAC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,IAAV;AAAA,kBAAiBA;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAD,CAAV;AACD,KAFD,MAGK,IAAIA,IAAI,CAACI,UAAL,CAAgB,QAAhB,CAAJ,EAA+B;AAClCF,MAAAA,UAAU,CAACF,IAAD,CAAV;AACD,KAFI,MAGA,IAAIA,IAAI,CAACI,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAChC,YAAM,GAAGC,IAAH,IAAWL,IAAI,CAACM,KAAL,CAAW,GAAX,CAAjB;AACAC,MAAAA,KAAK,CAAC,gCAA8BF,IAA/B,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIT,UAAU,CAACS,IAAI,CAACC,GAAN,CAF1B;AAGD,KALI,MAMA,IAAIZ,IAAI,CAACI,UAAL,CAAgB,SAAhB,CAAJ,EAAgC;AACnC,YAAM,GAAGC,IAAH,IAAWL,IAAI,CAACM,KAAL,CAAW,GAAX,CAAjB;AACAC,MAAAA,KAAK,CAAC,oCAAkCF,IAAnC,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAIT,UAAU,CAACS,IAAI,CAACE,MAAN,CAF1B;AAGD,KALI,MAMA,IAAIb,IAAI,CAACI,UAAL,CAAgB,aAAhB,CAAJ,EAAoC,CACvC;AACA;AAED,KAJI,MAKA,IAAIJ,IAAI,CAACI,UAAL,CAAgB,aAAhB,CAAJ,EAAmC,CAEvC;AACF;;AAAA;AAEDR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,SAAS,CAACH,IAAD,CAAT;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAK,IAAA,uBAAuB,EAAE;AAACc,MAAAA,MAAM,EAAEb;AAAT;AAA9B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAzCQH,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import { useState,useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Chatline (props) {\r\n  let text = props.text;\r\n\r\n  const [element, setElement] = useState(text);\r\n\r\n  function transform(text) {\r\n    if (text.startsWith(\"/link\")) {\r\n      setElement(<Link to={text}>{text}</Link>);\r\n    }\r\n    else if (text.startsWith(\"/embed\")) {\r\n      setElement(text);\r\n    } \r\n    else if (text.startsWith(\"/age\")) {\r\n      const [, name] = text.split(\" \");\r\n      fetch(\"https://api.agify.io/?name=\"+name)\r\n        .then(res => res.json())\r\n        .then(data => setElement(data.age));\r\n    } \r\n    else if (text.startsWith(\"/gender\")) {\r\n      const [, name] = text.split(\" \");\r\n      fetch(\"https://api.genderize.io/?name=\"+name)\r\n        .then(res => res.json())\r\n        .then(data => setElement(data.gender));\r\n    } \r\n    else if (text.startsWith(\"/randomfact\")) {\r\n      // ex10-01 here: Implement randomfact using fetch & promise\r\n      // https://uselessfacts.jsph.pl/random.json?language=en\r\n      \r\n    }\r\n    else if (text.startsWith(\"nationalize\")){\r\n      \r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    transform(text);\r\n  },[]);\r\n\r\n  return (\r\n    <div dangerouslySetInnerHTML={{__html: element}}></div>\r\n  )\r\n}\r\n\r\nexport default Chatline;"]},"metadata":{},"sourceType":"module"}