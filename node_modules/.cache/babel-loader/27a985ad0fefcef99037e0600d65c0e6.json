{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kao\\\\Desktop\\\\GI472(\\u0E2A.)\\\\Visual Studio Code\\\\pwa-course-2022\\\\pwa-course-2022\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport App from './components/App.js';\nimport Chatbox from './components/Chatbox.js';\nimport Titlebar from './components/Titlebar.js';\nimport Userlist from './components/Userlist.js';\nimport Inputbox from './components/Inputbox.js';\nimport './Chat.css';\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\nimport { useAuthStateContext } from './context/FirebaseAuthContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const {\n    userList,\n    sendMsg,\n    listenToChatroom\n  } = useChatStateContext();\n  const {\n    authState\n  } = useAuthStateContext();\n  const [chatData, setChatData] = useState([]);\n  const [usersDict, setUsersDict] = useState({});\n\n  function userListToDict(userList) {\n    return userList.reduce((dict, item) => {\n      dict[item.key] = item;\n      return dict;\n    }, {});\n  }\n\n  useEffect(() => {\n    const x = userListToDict(userList);\n    setUsersDict(_ => x);\n  }, [userList]);\n\n  function onMsg(msg) {\n    setChatData(oldChat => [msg, ...oldChat]);\n  }\n\n  function transformChatData(item) {\n    let displayName = \"ไม่ทราบชื่อ(Offline)\";\n\n    if (item.user in usersDict && usersDict[item.user].displayName) {\n      displayName = usersDict[item.user].displayName;\n    } else if (item.user === authState.user.uid) {\n      displayName = authState.user.displayName;\n    }\n\n    return { ...item,\n      key: item.timestamp || Date.now(),\n      displayName: displayName,\n      position: item.user === authState.user.uid ? \"right\" : \"left\"\n    };\n  }\n\n  useEffect(() => {\n    const unsubscribeChatroom = listenToChatroom('mainhall', onMsg);\n    return () => {\n      unsubscribeChatroom();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(App, {\n    children: [/*#__PURE__*/_jsxDEV(Userlist, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(Titlebar, {\n        value: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chatbox, {\n        data: chatData.map(transformChatData).sort((a, b) => a.timestamp - b.timestamp)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Inputbox, {\n        onEnter: x => sendMsg(x, \"mainhall\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"/dngl7IDD9BIS9RacR2vRqX3xns=\", false, function () {\n  return [useChatStateContext, useAuthStateContext];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Kao/Desktop/GI472(ส.)/Visual Studio Code/pwa-course-2022/pwa-course-2022/src/Chat.js"],"names":["useEffect","useState","App","Chatbox","Titlebar","Userlist","Inputbox","useChatStateContext","useAuthStateContext","Chat","userList","sendMsg","listenToChatroom","authState","chatData","setChatData","usersDict","setUsersDict","userListToDict","reduce","dict","item","key","x","_","onMsg","msg","oldChat","transformChatData","displayName","user","uid","timestamp","Date","now","position","unsubscribeChatroom","map","sort","a","b"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,YAAP;AACA,SAASC,mBAAT,QAAoC,uCAApC;AACA,SAASC,mBAAT,QAAoC,uCAApC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,MAA0CL,mBAAmB,EAAnE;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBL,mBAAmB,EAAzC;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASiB,cAAT,CAAwBR,QAAxB,EAAkC;AAChC,WAAOA,QAAQ,CAACS,MAAT,CAAgB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrCD,MAAAA,IAAI,CAACC,IAAI,CAACC,GAAN,CAAJ,GAAiBD,IAAjB;AACA,aAAOD,IAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,CAAC,GAAGL,cAAc,CAACR,QAAD,CAAxB;AACAO,IAAAA,YAAY,CAACO,CAAC,IAAED,CAAJ,CAAZ;AACD,GAHQ,EAGP,CAACb,QAAD,CAHO,CAAT;;AAKA,WAASe,KAAT,CAAeC,GAAf,EAAoB;AAClBX,IAAAA,WAAW,CAACY,OAAO,IAAI,CAACD,GAAD,EAAM,GAAGC,OAAT,CAAZ,CAAX;AACD;;AAED,WAASC,iBAAT,CAA2BP,IAA3B,EAAiC;AAC/B,QAAIQ,WAAW,GAAG,sBAAlB;;AACA,QAAIR,IAAI,CAACS,IAAL,IAAad,SAAb,IAA0BA,SAAS,CAACK,IAAI,CAACS,IAAN,CAAT,CAAqBD,WAAnD,EAA+D;AAC7DA,MAAAA,WAAW,GAAGb,SAAS,CAACK,IAAI,CAACS,IAAN,CAAT,CAAqBD,WAAnC;AACD,KAFD,MAEO,IAAIR,IAAI,CAACS,IAAL,KAAcjB,SAAS,CAACiB,IAAV,CAAeC,GAAjC,EAAsC;AAC3CF,MAAAA,WAAW,GAAGhB,SAAS,CAACiB,IAAV,CAAeD,WAA7B;AACD;;AACD,WAAQ,EACN,GAAGR,IADG;AAENC,MAAAA,GAAG,EAAED,IAAI,CAACW,SAAL,IAAkBC,IAAI,CAACC,GAAL,EAFjB;AAGNL,MAAAA,WAAW,EAAEA,WAHP;AAINM,MAAAA,QAAQ,EAAEd,IAAI,CAACS,IAAL,KAAcjB,SAAS,CAACiB,IAAV,CAAeC,GAA7B,GAAmC,OAAnC,GAA6C;AAJjD,KAAR;AAMD;;AAED/B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoC,mBAAmB,GAAGxB,gBAAgB,CAAC,UAAD,EAAaa,KAAb,CAA5C;AAEA,WAAO,MAAM;AACXW,MAAAA,mBAAmB;AACpB,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AASA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEtB,QAAQ,CAACuB,GAAT,CAAaT,iBAAb,EAAgCU,IAAhC,CAAqC,CAACC,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACP,SAAF,GAAcQ,CAAC,CAACR,SAA5D;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAET,CAAC,IAAEZ,OAAO,CAACY,CAAD,EAAG,UAAH;AAA7B;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzDQd,I;UACyCF,mB,EAC1BC,mB;;;KAFfC,I;AA2DT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport App from './components/App.js';\r\nimport Chatbox from './components/Chatbox.js';\r\nimport Titlebar from './components/Titlebar.js';\r\nimport Userlist from './components/Userlist.js';\r\nimport Inputbox from './components/Inputbox.js';\r\nimport './Chat.css';\r\nimport { useChatStateContext } from './context/FirebaseChatContextProvider';\r\nimport { useAuthStateContext } from './context/FirebaseAuthContextProvider';\r\n\r\nfunction Chat() {\r\n  const { userList, sendMsg, listenToChatroom } = useChatStateContext();\r\n  const { authState } = useAuthStateContext();\r\n\r\n  const [chatData, setChatData] = useState([]);\r\n  const [usersDict, setUsersDict] = useState({});\r\n\r\n  function userListToDict(userList) {\r\n    return userList.reduce((dict, item) => {\r\n      dict[item.key] = item;\r\n      return dict;\r\n    }, {});\r\n  }\r\n\r\n  useEffect(() => {\r\n    const x = userListToDict(userList);\r\n    setUsersDict(_=>x);\r\n  },[userList])\r\n\r\n  function onMsg(msg) {\r\n    setChatData(oldChat => [msg, ...oldChat]);\r\n  }\r\n\r\n  function transformChatData(item) {\r\n    let displayName = \"ไม่ทราบชื่อ(Offline)\";\r\n    if (item.user in usersDict && usersDict[item.user].displayName){\r\n      displayName = usersDict[item.user].displayName;\r\n    } else if (item.user === authState.user.uid) {\r\n      displayName = authState.user.displayName;\r\n    }\r\n    return ({\r\n      ...item,\r\n      key: item.timestamp || Date.now(),\r\n      displayName: displayName,\r\n      position: item.user === authState.user.uid ? \"right\" : \"left\"\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribeChatroom = listenToChatroom('mainhall', onMsg);\r\n\r\n    return () => {\r\n      unsubscribeChatroom();\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <App>\r\n      <Userlist />\r\n      <div className=\"chat\">\r\n        <Titlebar value=\"Chat\"/>        \r\n        <Chatbox data={chatData.map(transformChatData).sort((a,b)=>a.timestamp - b.timestamp)}/>\r\n        <Inputbox onEnter={x=>sendMsg(x,\"mainhall\")}/>\r\n      </div>\r\n    </App>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}